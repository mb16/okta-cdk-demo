import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as okta from "./.gen/providers/okta";
//import * as Applications from "./.gen/modules/modules/applications";
//import * as AuthServers from "./.gen/modules/modules/auth-servers";

import { Construct } from "constructs";
import { App, CloudBackend, NamedCloudWorkspace, TerraformStack } from "cdktf";


class MyStack extends TerraformStack {
  constructor(scope: Construct, id: string) {
    super(scope, id);


    const apiToken = new cdktf.TerraformVariable(this, "api_token", {});
    const baseUrl = new cdktf.TerraformVariable(this, "base_url", {});
    const orgName = new cdktf.TerraformVariable(this, "org_name", {});
    
    /*
    const applications = new Applications.Applications(
      this,
      "applications",
      {}
    );
    */

    new okta.group.Group(this, "michaels_group", {
      description:
        "Group to verify CDK",
      name: "Michael's Group",
    });

    new okta.group.Group(this, "second_group", {
      description:
        "Another Group to verify CDK",
      name: "Second Group",
    });

    new okta.group.Group(this, "third_group", {
      description:
        "Third Group to verify CDK",
      name: "Third Group",
    });

    new okta.provider.OktaProvider(this, "okta", {
      apiToken: apiToken.value,
      baseUrl: baseUrl.value,
      orgName: orgName.value,
    });
  }
}


const app = new App();
const stack = new MyStack(app, "okta-cdk-demo");

new CloudBackend(stack, {
  hostname: "app.terraform.io",
  organization: "dev-05844969-okta-com-DEV",
  workspaces: new NamedCloudWorkspace("okta-cdk-demo"),
});


app.synth();
